name: "Fetch AQHI data"

on:
  schedule:
    # At minute 15 past every hour
    - cron:  '15 * * * *'  
  workflow_dispatch:      # also allow manual runs

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install requests pandas pytz

    - name: Fetch last 7 days of AQHI measurements and write CSV
      run: |
        python3 << 'EOF'
        import requests, pandas as pd
        from datetime import datetime, timedelta
        import pytz

        # Alberta timezone
        tz = pytz.timezone('America/Edmonton')
        now = datetime.now(tz)
        since = now - timedelta(days=7)

        # Format as "YYYY-MM-DDThh:mm:ssÂ±hh:mm"
        formatted = since.strftime('%Y-%m-%dT%H:%M:%S%z')
        # Insert the colon in the timezone offset
        formatted = formatted[:-2] + ':' + formatted[-2:]

        url = 'https://data.environment.alberta.ca/EdwServices/aqhi/odata/StationMeasurements'
        params = {
          '$format': 'json',
          '$filter': f"ReadingDate gt {formatted}",
          '$orderby': 'ReadingDate desc',
          '$select':  'StationName,ParameterName,ReadingDate,Value'
        }

        resp = requests.get(url, params=params, timeout=60)
        resp.raise_for_status()
        data = resp.json().get('value', [])

        df = pd.DataFrame(data)
        # If there's any data, write it; otherwise ensure file exists
        if not df.empty:
            df.to_csv('StationMeasurements.csv', index=False)
        else:
            # touch an empty file or leave existing
            open('StationMeasurements.csv', 'a').close()
        EOF

    - name: Commit & push CSV
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add StationMeasurements.csv
        # commit if changed; exit successfully even if no changes
        git commit -m "Automated AQHI update: $(date -u +"%Y-%m-%d %H:%M UTC")" || echo "No changes"
        git push
      env:
        # ensure we can push via the token Github provides
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
